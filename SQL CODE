--CREATE DATABASE

	CREATE DATABASE HR_RECUR
  
USE HR_RECUR
  
CREATE TABLE HR_RECRUITMENT 
(Position VARCHAR(MAX),	full_name VARCHAR(MAX),	Gender VARCHAR(MAX),	Salary	VARCHAR(MAX),Department VARCHAR(MAX),	DepartmentName VARCHAR(MAX),	Division VARCHAR(MAX),
AssignmentCategory	VARCHAR(MAX),Title VARCHAR(MAX),	HiringAnalyst VARCHAR(MAX),	VacancyStatus VARCHAR(MAX),	VacancyDate VARCHAR(MAX),	BudgetDate VARCHAR(MAX),
PostingDate VARCHAR(MAX),	InterviewDate	VARCHAR(MAX),OfferDate VARCHAR(MAX),	AcceptanceDate VARCHAR(MAX),	SecurityCheckDate VARCHAR(MAX),	HireDate VARCHAR(MAX))


--BULK INSERT INTO TABLE

BULK INSERT HR_RECRUITMENT 
FROM 'C:\Users\ASUS\OneDrive\Desktop\SQL\Hr_recruitement.csv'
WITH (FIELDTERMINATOR=',',ROWTERMINATOR='\n' , FIRSTROW=2, MAXERRORS=40)

SELECT *FROM HR_RECRUITMENT

--CHECK THE DATATYPE
SELECT COLUMN_NAME,DATA_TYPE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME='HR_RECRUITMENT'

--ALTER THE PARTICULAR COLUMN IF IT IS NEEDED & THEIR  DATATYPE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN SALARY  DECIMAL(10,2) /*SHOW ERROR THERE MUST BE NON _MUREMIC VALUE*/

---WE CAN SIMPLY GO FOR THE UPDATE FUNCTION BUT IF THERE ARE N NUMBER OF NON_NUMERIC VALUE THEN IT IS NOT POSSIBLE TO GO FOR THE UPDATE FUNCTION
--IN THIS SENARIO USE CASE WHEN WITH REPLACE FUNCTION

SELECT * FROM HR_RECRUITMENT
WHERE ISNUMERIC(SALARY)=0

update Hr_recruitment set salary= case when Salary like '%[@#$%^&*)_+=-]%' or salary  like '%[-]%' Then 
	replace(replace(salary,substring(salary,patindex('%[~!@#$%&*^()_+-]%',salary),1),''),'-','')
	else salary end 

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN VACANCYDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN BUDGETDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN POSTINGDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN INTERVIEWDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN OFFERDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN ACCEPTANCEDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN SECURITYCHECKDATE DATE

ALTER TABLE HR_RECRUITMENT
ALTER COLUMN HIREDATE DATE

---CHECK DUPLICACY

WITH CHECK_DUPLICATE AS(SELECT *,ROW_NUMBER()OVER (PARTITION BY POSITION ORDER BY POSITION) 'ROW_NUM'
FROM HR_RECRUITMENT)
SELECT*FROM CHECK_DUPLICATE
WHERE ROW_NUM>1

SELECT *FROM HR_RECRUITMENT

--- REMOVE : FROM THE FULL_NAME

UPDATE HR_RECRUITMENT SET full_name= REPLACE(FULL_NAME,':',' ')


--- 
SELECT* FROM HR_RECRUITMENT
WHERE full_name IS  NULL

SELECT* FROM HR_RECRUITMENT
WHERE VacancyStatus='VACANT'


-- DEPARTMENT WANT TO ANALYSE DISTRIBUTION OF HIRED EMPLOYEES FOR VARIOUS TITLE ON EACH DEPARTMENT


SELECT DEPARTMENTNAME,TITLE,
COUNT(full_name) AS 'COUNT_OF_EMP'
FROM HR_RECRUITMENT
GROUP BY DepartmentName,TITLE
ORDER BY COUNT_OF_EMP DESC

--FIND TOP 5 DEPARTMENT WHERE THEY HIRED MORE EMPLOYEE THAN THAN THE OTHER DEPARTMENT

SELECT TOP 5 DEPARTMENTNAME,
COUNT(full_name) AS 'COUNT_OF_EMP'
FROM HR_RECRUITMENT
GROUP BY DepartmentName
ORDER BY COUNT_OF_EMP 

--FIND BOTTOM 5 DEPARTMENT WHERE THEY HIRED MORE EMPLOYEE THAN THAN THE OTHER DEPARTMENT


SELECT TOP 5 DEPARTMENTNAME,
COUNT(full_name) AS 'COUNT_OF_EMP'
FROM HR_RECRUITMENT
GROUP BY DepartmentName
ORDER BY COUNT_OF_EMP DESC

/*THE HIRING DEPARTMENT WANTS TO IDENTIFY THE DEPARTMENT WITH THIER AVERAGE_sALARY OF THE EMPLOYEES AND  PERCENTAGE OF 
  EMPLOYEE  SALARY of department' WhERE IT IS ABOVE WITH its DEPARTMENT AVERAGE*/

WITH AVG_SALESDEPT AS(SELECT DEPARTMENTNAME,AVG(SALARY) AS 'AVG_SAL'
FROM HR_RECRUITMENT
GROUP BY DEPARTMENTNAME)

SELECT D.DEPARTMENTNAME,AVG_SAL,COUNT(CASE WHEN H.SALARY>D.AVG_SAL THEN 1 END)*100.0/COUNT(*) AS 'PERC_MORETHANAVG'
FROM HR_RECRUITMENT H
INNER JOIN AVG_SALESDEPT D
ON D.DEPARTMENTNAME=H.DEPARTMENTNAME
GROUP BY D.DEPARTMENTNAME,D.AVG_SAL
ORDER BY PERC_MORETHANAVG DESC

--IDENTIFY WHETHER THE EMPLOYEE HAVE MULTIPLE OFFER PROPOSED BEFORE ACCEPTANCE DATE


SELECT POSITION ,COUNT(FULL_NAME)
FROM HR_RECRUITMENT
WHERE ACCEPTANCEDATE IS NOT NULL
GROUP BY POSITION 
HAVING COUNT(FULL_NAME)>1

--CALCULATE THE AVERAGE TIME TO FULLFILL THE POSITION AND OFFER ACCEPTANCE rate BY HIRING_ANALYST

with performance as(select hiringanalyst,avg(DATEDIFF(day,vacancydate,hiredate)) as'avg_timetaken',
cast(sum(case when hiredate is not null then 1 else 0 end)as float)/count(*)*100 as 'acceptance_rate'
from HR_RECRUITMENT
group by hiringanalyst )

select hiringanalyst,avg_timetaken,concat(round(acceptance_rate,2),'%') 
from performance 
order by avg_timetaken desc


--DEPARTMENT WANTS TO IDENTIFY WHERE THE TIME EXCEEDED WITH THE BUDGETED TIME LIMIT

SELECT POSITION,DEPARTMENTNAME,DATEDIFF(DAY,VACANCYDATE,HIREDATE) AS 'TIMETOFULFILL'
,DATEDIFF(DAY,VACANCYDATE,BUDGETDATE) AS 'BUDGETED_TIMETOFULFILL'
FROM HR_RECRUITMENT
WHERE DATEDIFF(DAY,VACANCYDATE,HIREDATE)>DATEDIFF(DAY,VACANCYDATE,BUDGETDATE)


--FIND THE LONGEST AND SHORTEST TIME TO FULLFILL

SELECT MAX(DATEDIFF(DAY,VACANCYDATE,OFFERDATE)) AS 'LONGEST_DATE',
MIN(DATEDIFF(DAY,VACANCYDATE,OFFERDATE)) AS 'SHORTEST_DATE'
FROM HR_RECRUITMENT
WHERE HIREDATE IS NOT NULL

--FIND THE LONGEST AND SHORTEST TIME TO FULLFILL AS PER THE POSITION

WITH TIMETO_FILL AS(SELECT POSITION, DATEDIFF(DAY,VACANCYDATE,HIREDATE) AS 'FILLED_DATE'
FROM HR_RECRUITMENT)

SELECT POSITION ,FILLED_DATE
FROM TIMETO_FILL
WHERE FILLED_DATE=(SELECT (MAX(FILLED_DATE)) FROM TIMETO_FILL)
UNION ALL
SELECT POSITION ,FILLED_DATE
FROM TIMETO_FILL
WHERE FILLED_DATE=(SELECT (MIN(FILLED_DATE)) FROM TIMETO_FILL)

--IDENTIFY THE ATTRITION RATE  IN EACH DEPARTMENT WITH THE AVG SALARIES

SELECT DEPARTMENT,
        AVG(SALARY) AS AVG_sAL,COUNT(*) AS TOTAL_POSI,
       SUM(CASE WHEN  VACANCYSTATUS ='VACANT' THEN 1 ELSE 0 END) AS 'VACANT_POSI',
       CAST(SUM(CASE WHEN  VACANCYSTATUS ='VACANT' THEN 1 ELSE 0 END) AS FLOAT)/COUNT(*) *100 AS ATTRITION_RATE
       FROM HR_RECRUITMENT
       GROUP BY DEPARTMENT
       HAVING CAST(SUM(CASE WHEN  VACANCYSTATUS ='VACANT' THEN 1 ELSE 0 END) AS FLOAT)/COUNT(*) *100>0
       ORDER BY ATTRITION_RATE DESC


--CREATE A VIEW FOR RECRUITMENT SUMMARY
--DEPARTMENTNAME,COUNTOFPOSITION,AVGSAL,FILLEDDEPOSITS,VACANTPOSITION

CREATE VIEW RECRUITMENT
AS
SELECT DEPARTMENTNAME,COUNT(*) AS 'TOTAL_POSI', AVG(SALARY) AS AVG_SAL, 
SUM(CASE WHEN VACANCYSTATUS='FILLED' THEN 1 ELSE 0 END) AS 'FILLED_POSI',
SUM(CASE WHEN VACANCYSTATUS='VACANT' THEN 1 ELSE 0 END) AS 'VACANT_POSI'
FROM HR_RECRUITMENT
GROUP BY DEPARTMENTNAME

SELECT *FROM RECRUITMENT

SELECT*FROM  HR_RECRUITMENT

--CREATE A VIEW ON HIRING ANALYST VACANCY FILLED RATE AND VACANT POSITION

CREATE VIEW HIRING_ANALYST
AS
SELECT HIRINGANALYST,COUNT(*) AS TOTAL_POSI,
SUM(CASE WHEN VACANCYSTATUS='FILLED' THEN 1 ELSE 0 END)AS 'FILLED_POSI',
ROUND(CAST(SUM(CASE WHEN VACANCYSTATUS='FILLED' THEN 1 ELSE 0 END)AS FLOAT),2)/COUNT(*)*100 AS 'FILLED_RATE'
FROM HR_RECRUITMENT
GROUP BY HIRINGANALYST

SELECT *FROM HIRING_ANALYST

